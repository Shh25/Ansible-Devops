# ---
- name: Add Kubernetes APT GPG key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: Add Kubernetes APT repository
  apt_repository:
    repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: 'kubernetes'

- name: Install kubernetes packages
  apt:
    name: "kubectl"
    update_cache: yes
    state: latest
    
- set_fact:
    "cluster_name": "hello110"

# - name: 'Create cluster using cURL'
#   shell: 'curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer 32ef0a6dbf90dbb2310f591c6f16e55cc2a404272a07e49979b1a0255c66b673" -d "{\"name\": \"{{ cluster_name }}\",\"region\": \"nyc1\",\"version\": \"1.13.5-do.1\",\"node_pools\": [{\"size\": \"s-1vcpu-2gb\",\"count\": 1,\"name\": \"n1\",\"nodes\":[{\"droplet_id\": \"\", \"name\": \"\", \"ipv4\": \"\"}]}]}" "https://api.digitalocean.com/v2/kubernetes/clusters"'
#   args:
#     warn: false
#   register: cluster_var

# - set_fact:
#     cluster_output: "{{ cluster_var.stdout | join() }}"

# - set_fact:
#     cluster_id: "{{ cluster_output['kubernetes_cluster']['id'] }}"  

# - debug:
#     msg: "{{cluster_id}}" 

# - name: 'Check if cluster is created'
#   shell: 'curl -X GET -H "Content-Type: application/json" -H "Authorization: Bearer b7d03a6947b217efb6f3ec3bd3504582" "https://api.digitalocean.com/v2/kubernetes/clusters/{{ cluster_id }}"'
#   register: cluster_defined_var

- set_fact:
    cluster_id: "854c19a2-e5d9-4893-bd60-987f46a98724" 

- name: 'Create Kube config'
  shell: 'curl -X GET -H "Content-Type: application/json" -H "Authorization: Bearer 32ef0a6dbf90dbb2310f591c6f16e55cc2a404272a07e49979b1a0255c66b673" "https://api.digitalocean.com/v2/kubernetes/clusters/{{ cluster_id }}/kubeconfig"'
  args:
    warn: false
  register: config_variable_output

# Temporary config file in websrv
- copy: content='{{ config_variable_output.stdout }}' dest=/web-srv/kubeconfig.yaml

- name: Create Kubernetes config directory
  file:
    path: ".kube/"
    state: directory

- name: Copy admin.conf to Home directory
  copy:
    content: '{{ config_variable_output.stdout }}'
    dest: ".kube/config"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755
    remote_src: true
