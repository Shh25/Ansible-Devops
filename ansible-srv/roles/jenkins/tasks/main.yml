---
- name: Installing jre8
  become: true
  apt:
    name: openjdk-8-jre
    # update_cache: yes
    # cache_valid_time: 3600
    state: present
  
- name: Installing git
  become: true
  apt:
    name: git
    state: present

- name: Add jenkins repo key
  become: true
  apt_key:
    url: https://pkg.jenkins.io/debian/jenkins.io.key
    state: present

- name: Add jenkins repo list file into sources.list.d
  become: true
  apt_repository:
    repo: deb http://pkg.jenkins.io/debian-stable binary/
    state: present

- name: Installing jenkins
  become: true
  apt:
    name: jenkins
    state: latest
    update_cache: yes
    cache_valid_time: 3600

# Copy db.properties file
#- name: Changing jenkins port
#  become: true
#  template:
#    src: ./templates/jenkins
#    dest: /etc/default/jenkins

- name: Starting jenkins
  systemd:
    name: jenkins 
    state: started
    # timeout: 5
    # register: jenkins_service_status
  # Keep trying for 5 mins in 5 sec intervals
#   retries: 60
#   delay: 5
#   until: >
#      'status' in jenkins_service_status and
#      jenkins_service_status['status'] == 200

# - name: Debug jenkins
#   debug:
#     msg: jenkins_service_status

- name: Wait for 20 sec 
  wait_for:
      timeout: 20
  delegate_to: localhost

# - name: checking service status
#   command: systemctl status jenkins
#   register: result
#   ignore_errors: yes

# - name: showing report
#   debug:
#     var: result

# - name: Wait for Jenkins to start up
#   uri:
#     url: http://localhost:8080
#     status_code: 200
#     timeout: 5
#   register: jenkins_service_status
#   # Keep trying for 5 mins in 5 sec intervals
#   retries: 60
#   delay: 5
#   until: >
#      'status' in jenkins_service_status and
#      jenkins_service_status['status'] == 200

- name: Reading password
  no_log: true
  shell: cat /var/lib/jenkins/secrets/initialAdminPassword 
  register: initial

- name: Configuring jenkins
  become: true
  jenkins_script:
    script:  |
      import jenkins.model.*
      import hudson.security.*
      
      def instance = Jenkins.getInstance()

      println "--> Creating local user 'admin'"

      def hudsonRealm = new HudsonPrivateSecurityRealm(false)
      hudsonRealm.createAccount('{{ jenkins_admin_username }}','${user_pwd}')
      instance.setSecurityRealm(hudsonRealm)

      def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
      strategy.setAllowAnonymousRead(false)
      instance.setAuthorizationStrategy(strategy)
      instance.save()
    args:
      user_pwd: "{{jenkins_admin_password}}"
    user: "{{jenkins_admin_username}}"
    password: "{{initial.stdout}}"

- name: Complete jenkins setup
  become: true
  jenkins_script:
    script: |
      import static jenkins.model.Jenkins.instance as jenkins
      import jenkins.install.InstallState
      if (!jenkins.installState.isSetupComplete()) {
        InstallState.INITIAL_SETUP_COMPLETED.initializeState()}
    user: "{{jenkins_admin_username}}"
    password: "{{jenkins_admin_password}}"

- name: Install plugins
  jenkins_plugin:
    name: "{{item | urlencode }}"
    with_dependencies: true
    validate_certs: false
    url_username: "{{jenkins_admin_username}}"
    url_password: "{{jenkins_admin_password}}"
  with_items:
    - "{{plugins_list_org}}"
    - "{{plugins_list_build}}"
    - "{{plugins_list_build_tools}}"
    - "{{plugins_list_pipe}}"
    - "{{plugins_list_scm}}"
    - "{{plugins_list_notify}}"
  ignore_errors: yes

- name: Placing jobs script
  become: true
  template:
    src: ./templates/jenkins_jobs
    dest: /etc/jenkins_jobs/jenkins_jobs.ini

- name: Creating jobs folder
  command: mkdir /web-srv/jobs

- name: 

- name: Restarting jenkins
  systemd:
    name: jenkins 
    state: restarted
    daemon_reload: yes

- name: Wait for 10 sec 
  wait_for:
      timeout: 10
  delegate_to: localhost

# - jenkins_job:
#   config: "{{ lookup('file', 'templates/test.xml') }}"
#   name: checkbox
#   password: admin
#   url: http://localhost:8080
#   user: admin