---
ansible_user: "root"
key_file: "{{ ansible_env.HOME }}/.ssh/web_srv"

#nodejs
ansible_distribution_release: xenial
node_version: 10

#jenkins installation + config + plugins
jenkins_user: admin 
jenkins_password: admin
jenkins_job_name_checkbox: checkbox
jenkins_job_name_itrust: itrust
server_url: http://localhost:8080
jenkins_console_output_location: /var/lib/jenkins/jobs/itrust/builds/lastFailedBuild/log

plugins_list_org: ['dashboard-view','cloudbees-folder','antisamy-markup-formatter']
plugins_list_build: ['build-name-setter','build-timeout','config-file-provider','credentials-binding','embeddable-build-status','rebuild','ssh-agent','throttle-concurrents','timestamper','ws-cleanup','checkstyle', 'cobertura', 'htmlpublisher', 'junit', 'warnings', 'xunit', 'javadoc', 'text-finder']
plugins_list_build_tools: ['ant','nodejs','msbuild','maven-plugin','gradle']
plugins_list_pipe: ['workflow-aggregator', 'github-organization-folder', 'pipeline-stage-view', 'build-pipeline-plugin', 'conditional-buildstep', 'jenkins-multijob-plugin', 'parameterized-trigger', 'copyartifact']
plugins_list_scm: ['bitbucket', 'clearcase', 'cvs', 'git', 'git-parameter', 'github', 'gitlab-plugin', 'p4', 'repo', 'subversion', 'teamconcert', 'tfs', 'github-pullrequest']
plugins_list_notify: ['email-ext', 'emailext-template', 'mailer', 'publish-over-ssh', 'ssh', 'chucknorris']

# #checkbox static analysis
# checkbox_static_analysis_max_line_length: 170
# checkbox_static_analysis_max_function_length: 80
# checkbox_static_analysis_max_conditions: 6

#mysql
mysql_user: "root"
mysql_db: "itrust_db"
mysql_password: "hello"

#mongo
mongo_ip: 127.0.0.1
mongo_data_path: /data/db
mongo_admin: root
mongo_admin_password: root
bind: 0.0.0.0

#checkbox
checkbox_repo: https://github.com/Shh25/checkbox.io.git
checkbox_dest: /checkbox
app_port: 3002

#itrust
itrust_repo: https://{{ githubuser | urlencode }}:{{ githubpassword | urlencode }}@github.ncsu.edu/vsingh7/iTrust2-v4
itrust_dest: /itrust
githubuser: "sdagarwa"
githubpassword: "Shefali@23"
githubemail: "sdagarwa@ncsu.edu"
email_username: "vaibhavsinghspam"
email_password: "vaibhavs1nghsp@m"
mailsmtp: "mail"

#Fuzzer-test
number_of_runs: 1
timeout_in_seconds: 100
log_location: /tmp/
combined_log_name: logs_filtered
combined_log_dataset: logs_filtered_dataset


# This value determines how kubernetes binaries, config files, and service
# files are loaded onto the target machines.  The following are the only
# valid options:
#
# localBuild - requires make release to have been run to build local binaries
# packageManager - will install packages from your distribution using yum/dnf/apt
source_type: packageManager

# will be used as the Internal dns domain name if DNS is enabled. Services
# will be discoverable under <service-name>.<namespace>.svc.<domainname>, e.g.
# myservice.default.svc.cluster.local
cluster_name: cluster.local

# Set if you want to access kubernetes cluster via load balancer. The installer
# assumes that a load balancer has been preconfigured or resolves to
# kubernetes master
#master_cluster_hostname: kubernetes-cluster.example.com

# External fqdn used for the cluster (certificat only)
#master_cluster_public_hostname: public-kubernetes

# Port number for the load balanced master hostname.
#master_cluster_port: 443

# Account name of remote user. Ansible will use this user account to ssh into
# the managed machines. The user must be able to use sudo without asking
# for password unless ansible_sudo_pass is set
#ansible_ssh_user: root

# password for the ansible_ssh_user. If this is unset you will need to set up
# ssh keys so a password is not needed.
#ansible_ssh_pass: password

# If a password is needed to sudo to root that password must be set here
#ansible_sudo_pass: password

# A list of insecure registrys you might need to define
insecure_registrys:
#  - "gcr.io"

# Required for CoreOS. CoreOS does not include a Python interpreter. The
# pre-ansible role installs a python interpreter to /opt/bin/. For more
# information see https://coreos.com/blog/managing-coreos-with-ansible.html
#ansible_python_interpreter: "PATH=/opt/bin:$PATH python"

# If you need a proxy for the docker daemon define these here
#http_proxy: "http://proxy.example.com:3128"
#https_proxy: "http://proxy.example.com:3128"
#no_proxy: "127.0.0.1,localhost,docker-registry.somecorporation.com"

# Kubernetes internal network for services.
# Kubernetes services will get fake IP addresses from this range.
# This range must not conflict with anything in your infrastructure. These
# addresses do not need to be routable and must just be an unused block of space.
kube_service_addresses: 10.254.0.0/16

# Network implementation (flannel|opencontrail|contiv)
networking: flannel

# External network
# opencontrail_public_subnet: 10.1.4.0/24

# Underlay network
# opencontrail_private_subnet: 192.168.1.0/24

# Data interface
# opencontrail_interface: eth1

# Flannel internal network (optional). When flannel is used, it will assign IP
# addresses from this range to individual pods.
# This network must be unused in your network infrastructure!
flannel_subnet: 172.16.0.0

# Flannel internal network total size (optional). This is the prefix of the
# entire flannel overlay network.  So the entirety of 172.16.0.0/12 must be
# unused in your environment.
flannel_prefix: 12

# Flannel internal network (optional). This is the size allocation that flannel
# will give to each node on your network.  With these defaults you should have
# room for 4096 nodes with 254 pods per node.
flannel_host_prefix: 24

# Create a default Contiv network for providing connectivity among pods
# networking: contiv must be set to use Contiv networking
#contiv_default_network: true
#contiv_default_subnet: 172.16.0.0/16
#contiv_default_gw: 172.16.0.1

# Set to false to disable logging with elasticsearch
cluster_logging: true

# Turn to false to disable cluster monitoring with heapster and influxdb
cluster_monitoring: true

# Turn to false to disable the kube-ui addon for this cluster
kube_ui: false

# Turn to false to disable the kube-dash addon for this cluster
kube_dash: false

# Turn to false to disable the node_problem_detector addon for this cluster
node_problem_detector: false

# Turn this varable to 'false' to disable whole DNS configuration.
dns_setup: true
# How many replicas in the Replication Controller
dns_replicas: 1

# Certificate authority private key should not be kept on server
# but you probably want to keep it to generate user certificates. Set
# that value to "true" to keep ca.key file on {{ kube_cert_dir}}.
# It's recommended to remove the private key from the server. So if you set
# kube_cert_keep_ca to true, please copy the ca.key file somewhere that
# is secured, and remove it from server.
kube_cert_keep_ca: false

# There are other variable in roles/kubernetes/defaults/main.yml but changing
# them comes with a much higher risk to your cluster. So proceed over there
# with caution.

# See kube documentation for apiserver runtime config options.  Example below enables HPA, deployments features.
#kube_apiserver_additional_options:
#  - --runtime-config=extensions/v1beta1/deployments=true

# To enable etcd auto cert generation set the following *_scheme vars to "https"
etcd_url_scheme: "https"
etcd_peer_url_scheme: "https"
# For etcd client and peer cert authentication set these to true
etcd_client_cert_auth: true
etcd_peer_client_cert_auth: true

etcd_client_port: '2379'
# when the scheme vars above are set to "https" you need to set these to true!
flannel_etcd_use_certs: true
apiserver_etcd_use_certs: true

kube_use_node_system_container: false
kube_use_master_system_container: false
kube_use_etcd_system_container: false
kube_use_flannel_system_container: false

system_images_registry: "candidate-registry.fedoraproject.org"
system_images_registry_namespace: "f28"
system_images_tag: "latest"

